<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:hsf="http://www.taobao.com/hsf"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<context:component-scan base-package="com.zlz.hello.dal" use-default-filter="false">
		<context:include-filter type="regex" expression=".*Impl" />
	</context:component-scan>
	<context:property-placeholdeer location="classpath:hello-dal.properties" ignore-resource-not-found="true"/>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"init-method="init"destroy-method="close"> 
		<property name="url"value="jdbc:mysql://${dbHost}?characterEncoding=UTF-8&amp;zeroDateTimeBehaviorToNull" />
		<property name="username"value="${jdbc_user}" />
		<property name="password"value="${jdbc_password}" />

		<property name="filters"value="stat" />

		<property name="maxActive"value="20" />
		<property name="initialSize"value="1" />
		<property name="maxWait"value="60000" />
		<property name="minIdle"value="1" />

		<propertyname="timeBetweenEvictionRunsMillis" value="3000"/>
		<propertyname="minEvictableIdleTimeMillis" value="300000"/>

		<property name="validationQuery"value="SELECT 'x'" />
		<property name="testWhileIdle"value="true" />
		<property name="testOnBorrow"value="false" />
		<property name="testOnReturn"value="false" />

		<propertyname="poolPreparedStatements" value="true" />
		<propertyname="maxPoolPreparedStatementPerConnectionSize" value="50"/>
	</bean>
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <!-- 文件映射器，指定类文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:slqmap/*.xml"></property>  
    </bean> 	


　　<!--下面两种方法，一种是自动是扫描对应的service类，一种是通过注入sqlsessionFactory的方式来获取一个SqlsessionTemplate--> 
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
　　　　<!--set注入--> 
        <property name="basePackage" value="com.zlz.hello.dal.dao"/>  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean> 	
	   
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource">  <!-- dataSource是连接池组件的bean -->
	</bean>
	
	<!--redis-->
	<bean id="jedisPoolConfig" class="redis.client.jedis.JedisPoolConfig">  
			<!--最大连接数-->  
		<property name="maxActive" value="${${redis.pool.maxActive}}" />  
			<!--最大空闲连接数-->  
		<property name="maxIdle" value="${${redis.pool.maxIdle}}" />  
			<!--初始化连接数-->  
		<property name="minIdle" value="${${redis.pool.minIdle}}"/>  
			<!--最大等待时间-->  
		<property name="maxWaitMillis" value="${${redis.pool.maxWait}}" />  
			<!--对拿到的connection进行validateObject校验-->  
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
			<!--在进行returnObject对返回的connection进行validateObject校验-->  
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />  
			<!--定时对线程池中空闲的链接进行validateObject校验-->  
		<property name="testWhileIdle" value="true" />  
	</bean> 
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">  
		<constructor-arg index="0" ref="jedisPoolConfig"/>    
		<constructor-arg index="1" value="${${redis.host}}"/>  
		<constructor-arg index="2" value="${${redis.port}}"/>  
		<!--timeout-->  
		<constructor-arg index="3" value="${redis.timeout}"/>  
		<constructor-arg index="4" value="${${redis.password}}"/>  
	</bean> 
	
	<tx:annotation-driven transaction-manager="transactionManager">
</beans>